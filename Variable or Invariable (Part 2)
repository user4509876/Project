import random
from itertools import permutations

class collisions_class:
    def __init__(x, species):
        x.species = species

def collision(p1, p2):
    if p1.species != p2.species:
        species = ['A', 'B', 'C']
        p3 = [s for s in species if s not in [p1.species, p2.species]][0]
        p1.species = p3
        p2.species = p3

def simulate(numA, numB, numC, x):
    for n in range(x):
        particles = [collisions_class('A') for _ in range(numA)] + \
                    [collisions_class('B') for _ in range(numB)] + \
                    [collisions_class('C') for _ in range(numC)]

        for _ in range(250000):
            p1, p2 = random.sample(particles, 2)
            collision(p1, p2)

        final = {species: sum(1 for p in particles if p.species == species) for species in ['A', 'B', 'C']}
        print(f"Simulation {n+1} - Final Distribution: {final}")

permutations_ABC = set(permutations(range(1, 7), 3))

for idx, (numA, numB, numC) in enumerate(permutations_ABC):
    print(f"Permutation {idx+1}: A={numA}, B={numB}, C={numC}")
    simulate(numA, numB, numC, 3)
    print()
